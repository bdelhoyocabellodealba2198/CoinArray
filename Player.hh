#pragma once
#include "Header.hh"
//"FORWARD DECLARATION" DE LAS CLASES MAPA Y COIN MANAGER. USAREMOS MÉTODOS DEL MAPA PARA CONSTRUIR A NUESTRO PLAYER
//Y NO PONERLO DONDE HAYA UNA MONEDA. ADEMÁS, USAREMOS COIN MANAGER PARA GESTIONAR LA PUNTUACIÓN DEL PLAYER
class Map;
class CoinManager;

class Player
{
public:
	//CONSTRUCTOR DEL PLAYER EN FUNCIÓN DE LAS DIMENSIONES DEL OBJETO MAPA. PASAMOS POR REFERENCIA EL MAPA
	//Y LAS MONEDAS, QUE SERÁN NECESARIAS PARA QUE FUNCIONE BIEN LA CLASE PLAYER
	Player(Map &map, CoinManager &coins);

	//DESTRUCTOR DE PLAYER
	~Player();

	//MÉTODO QUE ACTUALIZA LA POSICIÓN DEL PLAYER EN FUNCIÓN DEL INPUT, DEJA VACÍA LA CELDA QUE QUEDA ATRÁS Y,
	//ADEMÁS, COMPRUEBA SI EN LA NUEVA POSICIÓN DEL PLAYER HABÍA UNA MONEDA PARA AUMENTAR LA PUNTUACIÓN
	void update(Input::Key keyPressed);

	//MÉTODO PARA SABER CUÁNTOS PUNTOS LLEVA EL JUGADOR
	int getPoints(); 

private:
	//MI OBJETO MAPA CON QUE EL VOY A TRABAJAR
	Map &myMap;
	
	//MIS OBJETOS DE COINMANAGER (MONEDAS) CON LAS QUE VOY A TRABAJAR
	CoinManager &myCoins;

	//POSICIÓN EN LA COORDENADA X DEL PLAYER
	int positionX;

	//POSICIÓN EN LA COORDENADA Y DEL PLAYER
	int positionY;

	//VARIABLE DONDE GUARDO LOS PUNTOS QUE LLEVA EL JUGADOR
	int playerPoints;

	//CHAR QUE REPRESENTA AL PLAYER
	char playerChar = '@';
	
	//CHAR QUE REPRESENTA LA CELDA VACÍA
	char emptyCell = '.';

	//CHAR QUE REPRESENTA A LAS MONEDAS
	char coinChar = '$';
};
